const { Telegraf } = require('telegraf');

module.exports = (bot) => {
    bot.hears('üíñ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—Å', async (ctx) => {
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å QR-–∫–æ–¥–æ–º (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ URL)
            await ctx.replyWithPhoto({
                source: 'assets/qr-code.png' // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å QR-–∫–æ–¥–æ–º
            }, {
                caption: 'üíñ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í–∞—à–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏—é –±–æ—Ç–∞.\n\nQR-–∫–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤:',
                parse_mode: 'HTML'
            });
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ QR-–∫–æ–¥–∞:', err);
            ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ QR-–∫–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    });
};